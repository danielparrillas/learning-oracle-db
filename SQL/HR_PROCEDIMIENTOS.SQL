
-- Script to create procedures for employee management in HR schema
CREATE OR REPLACE PROCEDURE AJUSTE_SALARIAL(
    I_ID IN EMPLOYEES.EMPLOYEE_ID%TYPE,
    I_PORCENTAJE IN FLOAT
)
IS
BEGIN
    UPDATE EMPLOYEES SET SALARY = SALARY * (1 + I_PORCENTAJE)
    WHERE EMPLOYEE_ID = I_ID;
END;

DECLARE
    I_ID NUMBER := :ID;
    I_PORCENTAJE FLOAT := :PORCENTAJE;
BEGIN
    AJUSTE_SALARIAL(
        I_ID => I_ID,
        I_PORCENTAJE => I_PORCENTAJE
    );
END;

-- Script to create a procedure to get employee data
CREATE OR REPLACE PROCEDURE OBTENER_DATOS_EMPLEADO(
    I_ID IN EMPLOYEES.EMPLOYEE_ID%TYPE,
    O_FIRST_NAME OUT EMPLOYEES.FIRST_NAME%TYPE,
    O_LAST_NAME OUT EMPLOYEES.LAST_NAME%TYPE,
    O_EMAIL OUT EMPLOYEES.EMAIL%TYPE
)
IS
BEGIN
    SELECT FIRST_NAME, LAST_NAME, EMAIL
    INTO O_FIRST_NAME, O_LAST_NAME, O_EMAIL
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = I_ID;
END;

DECLARE
    I_ID EMPLOYEES.EMPLOYEE_ID%TYPE := :ID;
    O_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE;
    O_LAST_NAME EMPLOYEES.LAST_NAME%TYPE;
    O_EMAIL EMPLOYEES.EMAIL%TYPE;
BEGIN
    OBTENER_DATOS_EMPLEADO(
        I_ID => I_ID,
        O_FIRST_NAME => O_FIRST_NAME,
        O_LAST_NAME => O_LAST_NAME,
        O_EMAIL => O_EMAIL
    );

    DBMS_OUTPUT.PUT_LINE('First Name: ' || O_FIRST_NAME);
    DBMS_OUTPUT.PUT_LINE('Last Name: ' || O_LAST_NAME);
    DBMS_OUTPUT.PUT_LINE('Email: ' || O_EMAIL);
END;

-- Script to drop the procedures
DROP PROCEDURE AJUSTE_SALARIAL;
DROP PROCEDURE OBTENER_DATOS_EMPLEADO;